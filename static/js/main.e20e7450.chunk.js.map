{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","hero","id","name","email","CardList","heroes","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredHeroes","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GAAD,OAAW,sBAAKC,UAAU,iBAAf,UAC3B,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,KAAKC,GAArC,6BACtB,6BAAKL,EAAMI,KAAKE,OAChB,4BAAIN,EAAMI,KAAKG,YCFNC,EAAW,SAACR,GAAD,OAAW,qBAAKC,UAAU,YAAf,SAC9BD,EAAMS,OAAOC,KAAI,SAAAN,GAAI,OACtB,cAAC,EAAD,CAAMC,GAAID,EAAKC,GAAID,KAAMA,UCHhBO,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,uBACAC,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCuCHG,G,wDAxCb,aAAe,IAAD,8BACZ,gBAOFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAPrC,EAAKC,MAAQ,CACXb,OAAQ,GACRU,YAAa,IAJH,E,qDAYd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,OAAQkB,S,oBAGxC,WAAU,IAAD,EAEuBC,KAAKN,MAA5Bb,EAFA,EAEAA,OAAQU,EAFR,EAEQA,YACTU,EAAiBpB,EAAOqB,QAAO,SAAA1B,GAAI,OACvCA,EAAKE,KAAKyB,cAAcC,SAASb,EAAYY,kBAE/C,OAGE,sBAAK9B,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CACEW,YAAY,gBACZC,aAAee,KAAKf,eAEtB,cAAC,EAAD,CAAUJ,OAAQoB,W,GAnCNI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e20e7450.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\n\nexport const Card = (props) => <div className='card-container'>\n    <img alt='monster' src={`https://robohash.org/${props.hero.id}1?set=set2&size=180x180`}></img>\n    <h2>{props.hero.name}</h2>\n    <p>{props.hero.email}</p>\n    </div>","import React from 'react'\nimport './card-list.styles.css'\nimport {Card} from '../card/card.component.jsx'\n\nexport const CardList = (props) => <div className='card-list'>\n    {props.heroes.map(hero => (\n    <Card id={hero.id} hero={hero}/>\n    ))}\n    </div>","import React from 'react';\nimport './search-box.styles.css'\n\nexport const SearchBox = ({placeholder, handleChange}) => {\n    return (\n        <input \n        type='search' \n        placeholder={placeholder} \n        onChange={handleChange}\n    />\n    )\n\n    }","import React, {Component, useState} from 'react'\nimport {CardList} from './components/card-list/card-list.component.jsx'\nimport {SearchBox} from './components/search-box/search-box.component.jsx'\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      heroes: [],\n      searchField: '',\n    }\n  }\n  \n  handleChange = e => {\n    this.setState({searchField: e.target.value})\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({heroes: users}))\n  }\n\n  render (){\n\n    const {heroes, searchField} = this.state;\n    const filteredHeroes = heroes.filter(hero =>\n      hero.name.toLowerCase().includes(searchField.toLowerCase()) )\n\n    return (\n\n  \n      <div className='App'>\n      <h1>Monsters Rolodex</h1>\n      <SearchBox \n        placeholder='Search Heroes' \n        handleChange= {this.handleChange}\n      />\n      <CardList heroes={filteredHeroes}>\n      </CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}